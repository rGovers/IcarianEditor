// Icarian Editor - Editor for the Icarian Game Engine
// 
// License at end of file.

#pragma once

#include <glad/glad.h>
#include <ktx.h>

#include "Core/IcarianAssert.h"

// Header created because KTX does not use OpenGL loaders 
// If I need to update I may auto gen this header in future but manual for now
// Refer to KTX headers for reference

#define KTX_VKFORMAT_UNDEFINED  0
#define KTX_VKFORMAT_R4G4_UNORM_PACK8  1
#define KTX_VKFORMAT_R4G4B4A4_UNORM_PACK16  2
#define KTX_VKFORMAT_B4G4R4A4_UNORM_PACK16  3
#define KTX_VKFORMAT_R5G6B5_UNORM_PACK16  4
#define KTX_VKFORMAT_B5G6R5_UNORM_PACK16  5
#define KTX_VKFORMAT_R5G5B5A1_UNORM_PACK16  6
#define KTX_VKFORMAT_B5G5R5A1_UNORM_PACK16  7
#define KTX_VKFORMAT_A1R5G5B5_UNORM_PACK16  8
#define KTX_VKFORMAT_R8_UNORM  9
#define KTX_VKFORMAT_R8_SNORM  10
#define KTX_VKFORMAT_R8_USCALED  11
#define KTX_VKFORMAT_R8_SSCALED  12
#define KTX_VKFORMAT_R8_UINT  13
#define KTX_VKFORMAT_R8_SINT  14
#define KTX_VKFORMAT_R8_SRGB  15
#define KTX_VKFORMAT_R8G8_UNORM  16
#define KTX_VKFORMAT_R8G8_SNORM  17
#define KTX_VKFORMAT_R8G8_USCALED  18
#define KTX_VKFORMAT_R8G8_SSCALED  19
#define KTX_VKFORMAT_R8G8_UINT  20
#define KTX_VKFORMAT_R8G8_SINT  21
#define KTX_VKFORMAT_R8G8_SRGB  22
#define KTX_VKFORMAT_R8G8B8_UNORM  23
#define KTX_VKFORMAT_R8G8B8_SNORM  24
#define KTX_VKFORMAT_R8G8B8_USCALED  25
#define KTX_VKFORMAT_R8G8B8_SSCALED  26
#define KTX_VKFORMAT_R8G8B8_UINT  27
#define KTX_VKFORMAT_R8G8B8_SINT  28
#define KTX_VKFORMAT_R8G8B8_SRGB  29
#define KTX_VKFORMAT_B8G8R8_UNORM  30
#define KTX_VKFORMAT_B8G8R8_SNORM  31
#define KTX_VKFORMAT_B8G8R8_USCALED  32
#define KTX_VKFORMAT_B8G8R8_SSCALED  33
#define KTX_VKFORMAT_B8G8R8_UINT  34
#define KTX_VKFORMAT_B8G8R8_SINT  35
#define KTX_VKFORMAT_B8G8R8_SRGB  36
#define KTX_VKFORMAT_R8G8B8A8_UNORM  37
#define KTX_VKFORMAT_R8G8B8A8_SNORM  38
#define KTX_VKFORMAT_R8G8B8A8_USCALED  39
#define KTX_VKFORMAT_R8G8B8A8_SSCALED  40
#define KTX_VKFORMAT_R8G8B8A8_UINT  41
#define KTX_VKFORMAT_R8G8B8A8_SINT  42
#define KTX_VKFORMAT_R8G8B8A8_SRGB  43
#define KTX_VKFORMAT_B8G8R8A8_UNORM  44
#define KTX_VKFORMAT_B8G8R8A8_SNORM  45
#define KTX_VKFORMAT_B8G8R8A8_USCALED  46
#define KTX_VKFORMAT_B8G8R8A8_SSCALED  47
#define KTX_VKFORMAT_B8G8R8A8_UINT  48
#define KTX_VKFORMAT_B8G8R8A8_SINT  49
#define KTX_VKFORMAT_B8G8R8A8_SRGB  50
#define KTX_VKFORMAT_A8B8G8R8_UNORM_PACK32  51
#define KTX_VKFORMAT_A8B8G8R8_SNORM_PACK32  52
#define KTX_VKFORMAT_A8B8G8R8_USCALED_PACK32  53
#define KTX_VKFORMAT_A8B8G8R8_SSCALED_PACK32  54
#define KTX_VKFORMAT_A8B8G8R8_UINT_PACK32  55
#define KTX_VKFORMAT_A8B8G8R8_SINT_PACK32  56
#define KTX_VKFORMAT_A8B8G8R8_SRGB_PACK32  57
#define KTX_VKFORMAT_A2R10G10B10_UNORM_PACK32  58
#define KTX_VKFORMAT_A2R10G10B10_SNORM_PACK32  59
#define KTX_VKFORMAT_A2R10G10B10_USCALED_PACK32  60
#define KTX_VKFORMAT_A2R10G10B10_SSCALED_PACK32  61
#define KTX_VKFORMAT_A2R10G10B10_UINT_PACK32  62
#define KTX_VKFORMAT_A2R10G10B10_SINT_PACK32  63
#define KTX_VKFORMAT_A2B10G10R10_UNORM_PACK32  64
#define KTX_VKFORMAT_A2B10G10R10_SNORM_PACK32  65
#define KTX_VKFORMAT_A2B10G10R10_USCALED_PACK32  66
#define KTX_VKFORMAT_A2B10G10R10_SSCALED_PACK32  67
#define KTX_VKFORMAT_A2B10G10R10_UINT_PACK32  68
#define KTX_VKFORMAT_A2B10G10R10_SINT_PACK32  69
#define KTX_VKFORMAT_R16_UNORM  70
#define KTX_VKFORMAT_R16_SNORM  71
#define KTX_VKFORMAT_R16_USCALED  72
#define KTX_VKFORMAT_R16_SSCALED  73
#define KTX_VKFORMAT_R16_UINT  74
#define KTX_VKFORMAT_R16_SINT  75
#define KTX_VKFORMAT_R16_SFLOAT  76
#define KTX_VKFORMAT_R16G16_UNORM  77
#define KTX_VKFORMAT_R16G16_SNORM  78
#define KTX_VKFORMAT_R16G16_USCALED  79
#define KTX_VKFORMAT_R16G16_SSCALED  80
#define KTX_VKFORMAT_R16G16_UINT  81
#define KTX_VKFORMAT_R16G16_SINT  82
#define KTX_VKFORMAT_R16G16_SFLOAT  83
#define KTX_VKFORMAT_R16G16B16_UNORM  84
#define KTX_VKFORMAT_R16G16B16_SNORM  85
#define KTX_VKFORMAT_R16G16B16_USCALED  86
#define KTX_VKFORMAT_R16G16B16_SSCALED  87
#define KTX_VKFORMAT_R16G16B16_UINT  88
#define KTX_VKFORMAT_R16G16B16_SINT  89
#define KTX_VKFORMAT_R16G16B16_SFLOAT  90
#define KTX_VKFORMAT_R16G16B16A16_UNORM  91
#define KTX_VKFORMAT_R16G16B16A16_SNORM  92
#define KTX_VKFORMAT_R16G16B16A16_USCALED  93
#define KTX_VKFORMAT_R16G16B16A16_SSCALED  94
#define KTX_VKFORMAT_R16G16B16A16_UINT  95
#define KTX_VKFORMAT_R16G16B16A16_SINT  96
#define KTX_VKFORMAT_R16G16B16A16_SFLOAT  97
#define KTX_VKFORMAT_R32_UINT  98
#define KTX_VKFORMAT_R32_SINT  99
#define KTX_VKFORMAT_R32_SFLOAT  100
#define KTX_VKFORMAT_R32G32_UINT  101
#define KTX_VKFORMAT_R32G32_SINT  102
#define KTX_VKFORMAT_R32G32_SFLOAT  103
#define KTX_VKFORMAT_R32G32B32_UINT  104
#define KTX_VKFORMAT_R32G32B32_SINT  105
#define KTX_VKFORMAT_R32G32B32_SFLOAT  106
#define KTX_VKFORMAT_R32G32B32A32_UINT  107
#define KTX_VKFORMAT_R32G32B32A32_SINT  108
#define KTX_VKFORMAT_R32G32B32A32_SFLOAT  109
#define KTX_VKFORMAT_R64_UINT  110
#define KTX_VKFORMAT_R64_SINT  111
#define KTX_VKFORMAT_R64_SFLOAT  112
#define KTX_VKFORMAT_R64G64_UINT  113
#define KTX_VKFORMAT_R64G64_SINT  114
#define KTX_VKFORMAT_R64G64_SFLOAT  115
#define KTX_VKFORMAT_R64G64B64_UINT  116
#define KTX_VKFORMAT_R64G64B64_SINT  117
#define KTX_VKFORMAT_R64G64B64_SFLOAT  118
#define KTX_VKFORMAT_R64G64B64A64_UINT  119
#define KTX_VKFORMAT_R64G64B64A64_SINT  120
#define KTX_VKFORMAT_R64G64B64A64_SFLOAT  121
#define KTX_VKFORMAT_B10G11R11_UFLOAT_PACK32  122
#define KTX_VKFORMAT_E5B9G9R9_UFLOAT_PACK32  123
#define KTX_VKFORMAT_D16_UNORM  124
#define KTX_VKFORMAT_X8_D24_UNORM_PACK32  125
#define KTX_VKFORMAT_D32_SFLOAT  126
#define KTX_VKFORMAT_S8_UINT  127
#define KTX_VKFORMAT_D16_UNORM_S8_UINT  128
#define KTX_VKFORMAT_D24_UNORM_S8_UINT  129
#define KTX_VKFORMAT_D32_SFLOAT_S8_UINT  130
#define KTX_VKFORMAT_BC1_RGB_UNORM_BLOCK  131
#define KTX_VKFORMAT_BC1_RGB_SRGB_BLOCK  132
#define KTX_VKFORMAT_BC1_RGBA_UNORM_BLOCK  133
#define KTX_VKFORMAT_BC1_RGBA_SRGB_BLOCK  134
#define KTX_VKFORMAT_BC2_UNORM_BLOCK  135
#define KTX_VKFORMAT_BC2_SRGB_BLOCK  136
#define KTX_VKFORMAT_BC3_UNORM_BLOCK  137
#define KTX_VKFORMAT_BC3_SRGB_BLOCK  138
#define KTX_VKFORMAT_BC4_UNORM_BLOCK  139
#define KTX_VKFORMAT_BC4_SNORM_BLOCK  140
#define KTX_VKFORMAT_BC5_UNORM_BLOCK  141
#define KTX_VKFORMAT_BC5_SNORM_BLOCK  142
#define KTX_VKFORMAT_BC6H_UFLOAT_BLOCK  143
#define KTX_VKFORMAT_BC6H_SFLOAT_BLOCK  144
#define KTX_VKFORMAT_BC7_UNORM_BLOCK  145
#define KTX_VKFORMAT_BC7_SRGB_BLOCK  146
#define KTX_VKFORMAT_ETC2_R8G8B8_UNORM_BLOCK  147
#define KTX_VKFORMAT_ETC2_R8G8B8_SRGB_BLOCK  148
#define KTX_VKFORMAT_ETC2_R8G8B8A1_UNORM_BLOCK  149
#define KTX_VKFORMAT_ETC2_R8G8B8A1_SRGB_BLOCK  150
#define KTX_VKFORMAT_ETC2_R8G8B8A8_UNORM_BLOCK  151
#define KTX_VKFORMAT_ETC2_R8G8B8A8_SRGB_BLOCK  152
#define KTX_VKFORMAT_EAC_R11_UNORM_BLOCK  153
#define KTX_VKFORMAT_EAC_R11_SNORM_BLOCK  154
#define KTX_VKFORMAT_EAC_R11G11_UNORM_BLOCK  155
#define KTX_VKFORMAT_EAC_R11G11_SNORM_BLOCK  156
#define KTX_VKFORMAT_ASTC_4x4_UNORM_BLOCK  157
#define KTX_VKFORMAT_ASTC_4x4_SRGB_BLOCK  158
#define KTX_VKFORMAT_ASTC_5x4_UNORM_BLOCK  159
#define KTX_VKFORMAT_ASTC_5x4_SRGB_BLOCK  160
#define KTX_VKFORMAT_ASTC_5x5_UNORM_BLOCK  161
#define KTX_VKFORMAT_ASTC_5x5_SRGB_BLOCK  162
#define KTX_VKFORMAT_ASTC_6x5_UNORM_BLOCK  163
#define KTX_VKFORMAT_ASTC_6x5_SRGB_BLOCK  164
#define KTX_VKFORMAT_ASTC_6x6_UNORM_BLOCK  165
#define KTX_VKFORMAT_ASTC_6x6_SRGB_BLOCK  166
#define KTX_VKFORMAT_ASTC_8x5_UNORM_BLOCK  167
#define KTX_VKFORMAT_ASTC_8x5_SRGB_BLOCK  168
#define KTX_VKFORMAT_ASTC_8x6_UNORM_BLOCK  169
#define KTX_VKFORMAT_ASTC_8x6_SRGB_BLOCK  170
#define KTX_VKFORMAT_ASTC_8x8_UNORM_BLOCK  171
#define KTX_VKFORMAT_ASTC_8x8_SRGB_BLOCK  172
#define KTX_VKFORMAT_ASTC_10x5_UNORM_BLOCK  173
#define KTX_VKFORMAT_ASTC_10x5_SRGB_BLOCK  174
#define KTX_VKFORMAT_ASTC_10x6_UNORM_BLOCK  175
#define KTX_VKFORMAT_ASTC_10x6_SRGB_BLOCK  176
#define KTX_VKFORMAT_ASTC_10x8_UNORM_BLOCK  177
#define KTX_VKFORMAT_ASTC_10x8_SRGB_BLOCK  178
#define KTX_VKFORMAT_ASTC_10x10_UNORM_BLOCK  179
#define KTX_VKFORMAT_ASTC_10x10_SRGB_BLOCK  180
#define KTX_VKFORMAT_ASTC_12x10_UNORM_BLOCK  181
#define KTX_VKFORMAT_ASTC_12x10_SRGB_BLOCK  182
#define KTX_VKFORMAT_ASTC_12x12_UNORM_BLOCK  183
#define KTX_VKFORMAT_ASTC_12x12_SRGB_BLOCK  184
#define KTX_VKFORMAT_G8B8G8R8_422_UNORM  1000156000
#define KTX_VKFORMAT_B8G8R8G8_422_UNORM  1000156001
#define KTX_VKFORMAT_G8_B8_R8_3PLANE_420_UNORM  1000156002
#define KTX_VKFORMAT_G8_B8R8_2PLANE_420_UNORM  1000156003
#define KTX_VKFORMAT_G8_B8_R8_3PLANE_422_UNORM  1000156004
#define KTX_VKFORMAT_G8_B8R8_2PLANE_422_UNORM  1000156005
#define KTX_VKFORMAT_G8_B8_R8_3PLANE_444_UNORM  1000156006
#define KTX_VKFORMAT_R10X6_UNORM_PACK16  1000156007
#define KTX_VKFORMAT_R10X6G10X6_UNORM_2PACK16  1000156008
#define KTX_VKFORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16  1000156009
#define KTX_VKFORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16  1000156010
#define KTX_VKFORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16  1000156011
#define KTX_VKFORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16  1000156012
#define KTX_VKFORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16  1000156013
#define KTX_VKFORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16  1000156014
#define KTX_VKFORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16  1000156015
#define KTX_VKFORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16  1000156016
#define KTX_VKFORMAT_R12X4_UNORM_PACK16  1000156017
#define KTX_VKFORMAT_R12X4G12X4_UNORM_2PACK16  1000156018
#define KTX_VKFORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16  1000156019
#define KTX_VKFORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16  1000156020
#define KTX_VKFORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16  1000156021
#define KTX_VKFORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16  1000156022
#define KTX_VKFORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16  1000156023
#define KTX_VKFORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16  1000156024
#define KTX_VKFORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16  1000156025
#define KTX_VKFORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16  1000156026
#define KTX_VKFORMAT_G16B16G16R16_422_UNORM  1000156027
#define KTX_VKFORMAT_B16G16R16G16_422_UNORM  1000156028
#define KTX_VKFORMAT_G16_B16_R16_3PLANE_420_UNORM  1000156029
#define KTX_VKFORMAT_G16_B16R16_2PLANE_420_UNORM  1000156030
#define KTX_VKFORMAT_G16_B16_R16_3PLANE_422_UNORM  1000156031
#define KTX_VKFORMAT_G16_B16R16_2PLANE_422_UNORM  1000156032
#define KTX_VKFORMAT_G16_B16_R16_3PLANE_444_UNORM  1000156033
#define KTX_VKFORMAT_G8_B8R8_2PLANE_444_UNORM  1000330000
#define KTX_VKFORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16  1000330001
#define KTX_VKFORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16  1000330002
#define KTX_VKFORMAT_G16_B16R16_2PLANE_444_UNORM  1000330003
#define KTX_VKFORMAT_A4R4G4B4_UNORM_PACK16  1000340000
#define KTX_VKFORMAT_A4B4G4R4_UNORM_PACK16  1000340001
#define KTX_VKFORMAT_ASTC_4x4_SFLOAT_BLOCK  1000066000
#define KTX_VKFORMAT_ASTC_5x4_SFLOAT_BLOCK  1000066001
#define KTX_VKFORMAT_ASTC_5x5_SFLOAT_BLOCK  1000066002
#define KTX_VKFORMAT_ASTC_6x5_SFLOAT_BLOCK  1000066003
#define KTX_VKFORMAT_ASTC_6x6_SFLOAT_BLOCK  1000066004
#define KTX_VKFORMAT_ASTC_8x5_SFLOAT_BLOCK  1000066005
#define KTX_VKFORMAT_ASTC_8x6_SFLOAT_BLOCK  1000066006
#define KTX_VKFORMAT_ASTC_8x8_SFLOAT_BLOCK  1000066007
#define KTX_VKFORMAT_ASTC_10x5_SFLOAT_BLOCK  1000066008
#define KTX_VKFORMAT_ASTC_10x6_SFLOAT_BLOCK  1000066009
#define KTX_VKFORMAT_ASTC_10x8_SFLOAT_BLOCK  1000066010
#define KTX_VKFORMAT_ASTC_10x10_SFLOAT_BLOCK  1000066011
#define KTX_VKFORMAT_ASTC_12x10_SFLOAT_BLOCK  1000066012
#define KTX_VKFORMAT_ASTC_12x12_SFLOAT_BLOCK  1000066013
#define KTX_VKFORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG  1000054000
#define KTX_VKFORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG  1000054001
#define KTX_VKFORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG  1000054002
#define KTX_VKFORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG  1000054003
#define KTX_VKFORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG  1000054004
#define KTX_VKFORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG  1000054005
#define KTX_VKFORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG  1000054006
#define KTX_VKFORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG  1000054007
#define KTX_VKFORMAT_ASTC_3x3x3_UNORM_BLOCK_EXT  1000288000
#define KTX_VKFORMAT_ASTC_3x3x3_SRGB_BLOCK_EXT  1000288001
#define KTX_VKFORMAT_ASTC_3x3x3_SFLOAT_BLOCK_EXT  1000288002
#define KTX_VKFORMAT_ASTC_4x3x3_UNORM_BLOCK_EXT  1000288003
#define KTX_VKFORMAT_ASTC_4x3x3_SRGB_BLOCK_EXT  1000288004
#define KTX_VKFORMAT_ASTC_4x3x3_SFLOAT_BLOCK_EXT  1000288005
#define KTX_VKFORMAT_ASTC_4x4x3_UNORM_BLOCK_EXT  1000288006
#define KTX_VKFORMAT_ASTC_4x4x3_SRGB_BLOCK_EXT  1000288007
#define KTX_VKFORMAT_ASTC_4x4x3_SFLOAT_BLOCK_EXT  1000288008
#define KTX_VKFORMAT_ASTC_4x4x4_UNORM_BLOCK_EXT  1000288009
#define KTX_VKFORMAT_ASTC_4x4x4_SRGB_BLOCK_EXT  1000288010
#define KTX_VKFORMAT_ASTC_4x4x4_SFLOAT_BLOCK_EXT  1000288011
#define KTX_VKFORMAT_ASTC_5x4x4_UNORM_BLOCK_EXT  1000288012
#define KTX_VKFORMAT_ASTC_5x4x4_SRGB_BLOCK_EXT  1000288013
#define KTX_VKFORMAT_ASTC_5x4x4_SFLOAT_BLOCK_EXT  1000288014
#define KTX_VKFORMAT_ASTC_5x5x4_UNORM_BLOCK_EXT  1000288015
#define KTX_VKFORMAT_ASTC_5x5x4_SRGB_BLOCK_EXT  1000288016
#define KTX_VKFORMAT_ASTC_5x5x4_SFLOAT_BLOCK_EXT  1000288017
#define KTX_VKFORMAT_ASTC_5x5x5_UNORM_BLOCK_EXT  1000288018
#define KTX_VKFORMAT_ASTC_5x5x5_SRGB_BLOCK_EXT  1000288019
#define KTX_VKFORMAT_ASTC_5x5x5_SFLOAT_BLOCK_EXT  1000288020
#define KTX_VKFORMAT_ASTC_6x5x5_UNORM_BLOCK_EXT  1000288021
#define KTX_VKFORMAT_ASTC_6x5x5_SRGB_BLOCK_EXT  1000288022
#define KTX_VKFORMAT_ASTC_6x5x5_SFLOAT_BLOCK_EXT  1000288023
#define KTX_VKFORMAT_ASTC_6x6x5_UNORM_BLOCK_EXT  1000288024
#define KTX_VKFORMAT_ASTC_6x6x5_SRGB_BLOCK_EXT  1000288025
#define KTX_VKFORMAT_ASTC_6x6x5_SFLOAT_BLOCK_EXT  1000288026
#define KTX_VKFORMAT_ASTC_6x6x6_UNORM_BLOCK_EXT  1000288027
#define KTX_VKFORMAT_ASTC_6x6x6_SRGB_BLOCK_EXT  1000288028
#define KTX_VKFORMAT_ASTC_6x6x6_SFLOAT_BLOCK_EXT  1000288029
#define KTX_VKFORMAT_R16G16_S10_5_NV  1000464000
#define KTX_VKFORMAT_A1B5G5R5_UNORM_PACK16_KHR  1000470000
#define KTX_VKFORMAT_A8_UNORM_KHR  1000470001

constexpr static GLenum GLInternalFormatFromKtxVkFormat(ktx_uint32_t a_format)
{
    switch (a_format) 
    {
    case KTX_VKFORMAT_R4G4B4A4_UNORM_PACK16: 
    {
        return GL_RGBA4;
    }
    case KTX_VKFORMAT_B4G4R4A4_UNORM_PACK16: 
    {
        return GL_RGBA4;
    }
    case KTX_VKFORMAT_R5G6B5_UNORM_PACK16: 
    {
        return GL_RGB565;
    }
    case KTX_VKFORMAT_B5G6R5_UNORM_PACK16: 
    {
        return GL_RGB565;
    }
    case KTX_VKFORMAT_R5G5B5A1_UNORM_PACK16: 
    {
        return GL_RGB5_A1;
    }
    case KTX_VKFORMAT_B5G5R5A1_UNORM_PACK16: 
    {
        return GL_RGB5_A1;
    }
    case KTX_VKFORMAT_A1R5G5B5_UNORM_PACK16: 
    {
        return GL_RGB5_A1;
    }
    case KTX_VKFORMAT_R8_UNORM: 
    {
        return GL_R8;
    }
    case KTX_VKFORMAT_R8_SNORM: 
    {
        return GL_R8_SNORM;
    }
    case KTX_VKFORMAT_R8_UINT: 
    {
        return GL_R8UI;
    }
    case KTX_VKFORMAT_R8_SINT: 
    {
        return GL_R8I;
    }
    case KTX_VKFORMAT_R8_SRGB: 
    {
        return GL_SR8_EXT;
    }
    case KTX_VKFORMAT_R8G8_UNORM: 
    {
        return GL_RG8;
    }
    case KTX_VKFORMAT_R8G8_SNORM: 
    {
        return GL_RG8_SNORM;
    }
    case KTX_VKFORMAT_R8G8_UINT: 
    {
        return GL_RG8UI;
    }
    case KTX_VKFORMAT_R8G8_SINT: 
    {
        return GL_RG8I;
    }
    case KTX_VKFORMAT_R8G8_SRGB: 
    {
        return GL_SRG8_EXT;
    }
    case KTX_VKFORMAT_R8G8B8_UNORM: 
    {
        return GL_RGB8;
    }
    case KTX_VKFORMAT_R8G8B8_SNORM: 
    {
        return GL_RGB8_SNORM;
    }
    case KTX_VKFORMAT_R8G8B8_UINT: 
    {
        return GL_RGB8UI;
    }
    case KTX_VKFORMAT_R8G8B8_SINT: 
    {
        return GL_RGB8I;
    }
    case KTX_VKFORMAT_R8G8B8_SRGB: 
    {
        return GL_SRGB8;
    }
    case KTX_VKFORMAT_B8G8R8_UNORM: 
    {
        return GL_RGB8;
    }
    case KTX_VKFORMAT_B8G8R8_SNORM: 
    {
        return GL_RGB8_SNORM;
    }
    case KTX_VKFORMAT_B8G8R8_UINT: 
    {
        return GL_RGB8UI;
    }
    case KTX_VKFORMAT_B8G8R8_SINT: 
    {
        return GL_RGB8I;
    }
    case KTX_VKFORMAT_B8G8R8_SRGB: 
    {
        return GL_SRGB8;
    }
    case KTX_VKFORMAT_R8G8B8A8_UNORM: 
    {
        return GL_RGBA8;
    }
    case KTX_VKFORMAT_R8G8B8A8_SNORM: 
    {
        return GL_RGBA8_SNORM;
    }
    case KTX_VKFORMAT_R8G8B8A8_UINT: 
    {
        return GL_RGBA8UI;
    }
    case KTX_VKFORMAT_R8G8B8A8_SINT: 
    {
        return GL_RGBA8I;
    }
    case KTX_VKFORMAT_R8G8B8A8_SRGB: 
    {
        return GL_SRGB8_ALPHA8;
    }
    case KTX_VKFORMAT_B8G8R8A8_UNORM: 
    {
        return GL_RGBA8;
    }
    case KTX_VKFORMAT_B8G8R8A8_SNORM: 
    {
        return GL_RGBA8_SNORM;
    }
    case KTX_VKFORMAT_B8G8R8A8_UINT: 
    {
        return GL_RGBA8UI;
    }
    case KTX_VKFORMAT_B8G8R8A8_SINT: 
    {
        return GL_RGBA8I;
    }
    case KTX_VKFORMAT_B8G8R8A8_SRGB: 
    {
        return GL_SRGB8_ALPHA8;
    }
    case KTX_VKFORMAT_A8B8G8R8_UNORM_PACK32: 
    {
        return GL_RGBA8;
    }
    case KTX_VKFORMAT_A8B8G8R8_SNORM_PACK32: 
    {
        return GL_RGBA8_SNORM;
    }
    case KTX_VKFORMAT_A8B8G8R8_UINT_PACK32: 
    {
        return GL_RGBA8UI;
    }
    case KTX_VKFORMAT_A8B8G8R8_SINT_PACK32: 
    {
        return GL_RGBA8I;
    }
    case KTX_VKFORMAT_A8B8G8R8_SRGB_PACK32: 
    {
        return GL_SRGB8_ALPHA8;
    }
    case KTX_VKFORMAT_A2R10G10B10_UNORM_PACK32: 
    {
        return GL_RGB10_A2;
    }
    case KTX_VKFORMAT_A2R10G10B10_UINT_PACK32: 
    {
        return GL_RGB10_A2UI;
    }
    case KTX_VKFORMAT_A2B10G10R10_UNORM_PACK32: 
    {
        return GL_RGB10_A2;
    }
    case KTX_VKFORMAT_A2B10G10R10_UINT_PACK32: 
    {
        return GL_RGB10_A2UI;
    }
    case KTX_VKFORMAT_R16_UNORM: 
    {
        return GL_R16;
    }
    case KTX_VKFORMAT_R16_SNORM: 
    {
        return GL_R16_SNORM;
    }
    case KTX_VKFORMAT_R16_UINT: 
    {
        return GL_R16UI;
    }
    case KTX_VKFORMAT_R16_SINT: 
    {
        return GL_R16I;
    }
    case KTX_VKFORMAT_R16_SFLOAT: 
    {
        return GL_R16F;
    }
    case KTX_VKFORMAT_R16G16_UNORM: 
    {
        return GL_RG16;
    }
    case KTX_VKFORMAT_R16G16_SNORM: 
    {
        return GL_RG16_SNORM;
    }
    case KTX_VKFORMAT_R16G16_UINT: 
    {
        return GL_RG16UI;
    }
    case KTX_VKFORMAT_R16G16_SINT: 
    {
        return GL_RG16I;
    }
    case KTX_VKFORMAT_R16G16_SFLOAT: 
    {
        return GL_RG16F;
    }
    case KTX_VKFORMAT_R16G16B16_UNORM: 
    {
        return GL_RGB16;
    }
    case KTX_VKFORMAT_R16G16B16_SNORM: 
    {
        return GL_RGB16_SNORM;
    }
    case KTX_VKFORMAT_R16G16B16_UINT: 
    {
        return GL_RGB16UI;
    }
    case KTX_VKFORMAT_R16G16B16_SINT: 
    {
        return GL_RGB16I;
    }
    case KTX_VKFORMAT_R16G16B16_SFLOAT: 
    {
        return GL_RGB16F;
    }
    case KTX_VKFORMAT_R16G16B16A16_UNORM: 
    {
        return GL_RGBA16;
    }
    case KTX_VKFORMAT_R16G16B16A16_SNORM: 
    {
        return GL_RGBA16_SNORM;
    }
    case KTX_VKFORMAT_R16G16B16A16_UINT: 
    {
        return GL_RGBA16UI;
    }
    case KTX_VKFORMAT_R16G16B16A16_SINT: 
    {
        return GL_RGBA16I;
    }
    case KTX_VKFORMAT_R16G16B16A16_SFLOAT: 
    {
        return GL_RGBA16F;
    }
    case KTX_VKFORMAT_R32_UINT: 
    {
        return GL_R32UI;
    }
    case KTX_VKFORMAT_R32_SINT: 
    {
        return GL_R32I;
    }
    case KTX_VKFORMAT_R32_SFLOAT: 
    {
        return GL_R32F;
    }
    case KTX_VKFORMAT_R32G32_UINT: 
    {
        return GL_RG32UI;
    }
    case KTX_VKFORMAT_R32G32_SINT: 
    {
        return GL_RG32I;
    }
    case KTX_VKFORMAT_R32G32_SFLOAT: 
    {
        return GL_RG32F;
    }
    case KTX_VKFORMAT_R32G32B32_UINT: 
    {
        return GL_RGB32UI;
    }
    case KTX_VKFORMAT_R32G32B32_SINT: 
    {
        return GL_RGB32I;
    }
    case KTX_VKFORMAT_R32G32B32_SFLOAT: 
    {
        return GL_RGB32F;
    }
    case KTX_VKFORMAT_R32G32B32A32_UINT:
    {
        return GL_RGBA32UI;
    } 
    case KTX_VKFORMAT_R32G32B32A32_SINT: 
    {
        return GL_RGBA32I;
    }
    case KTX_VKFORMAT_R32G32B32A32_SFLOAT: 
    {
        return GL_RGBA32F;
    }
    case KTX_VKFORMAT_B10G11R11_UFLOAT_PACK32: 
    {
        return GL_R11F_G11F_B10F;
    }
    case KTX_VKFORMAT_E5B9G9R9_UFLOAT_PACK32: 
    {
        return GL_RGB9_E5;
    }
    case KTX_VKFORMAT_D16_UNORM: 
    {
        return GL_DEPTH_COMPONENT16;
    }
    case KTX_VKFORMAT_D32_SFLOAT: 
    {
        return GL_DEPTH_COMPONENT32F;
    }
    case KTX_VKFORMAT_S8_UINT: 
    {
        return GL_STENCIL_INDEX8;
    }
    case KTX_VKFORMAT_D24_UNORM_S8_UINT: 
    {
        return GL_DEPTH24_STENCIL8;
    }
    case KTX_VKFORMAT_D32_SFLOAT_S8_UINT: 
    {
        return GL_DEPTH32F_STENCIL8;
    }
    case KTX_VKFORMAT_BC1_RGB_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGB_S3TC_DXT1_EXT;
    }
    case KTX_VKFORMAT_BC1_RGB_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB_S3TC_DXT1_EXT;
    }
    case KTX_VKFORMAT_BC1_RGBA_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_S3TC_DXT1_EXT;
    }
    case KTX_VKFORMAT_BC1_RGBA_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
    }
    case KTX_VKFORMAT_BC2_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_S3TC_DXT3_EXT;
    }
    case KTX_VKFORMAT_BC2_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
    }
    case KTX_VKFORMAT_BC3_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_S3TC_DXT5_EXT;
    }
    case KTX_VKFORMAT_BC3_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
    }
    case KTX_VKFORMAT_BC4_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RED_RGTC1;
    }
    case KTX_VKFORMAT_BC4_SNORM_BLOCK: 
    {
        return GL_COMPRESSED_SIGNED_RED_RGTC1;
    }
    case KTX_VKFORMAT_BC5_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RG_RGTC2;
    }
    case KTX_VKFORMAT_BC5_SNORM_BLOCK: 
    {
        return GL_COMPRESSED_SIGNED_RG_RGTC2;
    }
    case KTX_VKFORMAT_BC6H_UFLOAT_BLOCK: 
    {
        return GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT;
    }
    case KTX_VKFORMAT_BC6H_SFLOAT_BLOCK: 
    {
        return GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT;
    }
    case KTX_VKFORMAT_BC7_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_BPTC_UNORM;
    }
    case KTX_VKFORMAT_BC7_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM;
    }
    case KTX_VKFORMAT_ETC2_R8G8B8_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGB8_ETC2;
    }
    case KTX_VKFORMAT_ETC2_R8G8B8_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_ETC2;
    }
    case KTX_VKFORMAT_ETC2_R8G8B8A1_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;
    }
    case KTX_VKFORMAT_ETC2_R8G8B8A1_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;
    }
    case KTX_VKFORMAT_ETC2_R8G8B8A8_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA8_ETC2_EAC;
    }
    case KTX_VKFORMAT_ETC2_R8G8B8A8_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;
    }
    case KTX_VKFORMAT_EAC_R11_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_R11_EAC;
    }
    case KTX_VKFORMAT_EAC_R11_SNORM_BLOCK: 
    {
        return GL_COMPRESSED_SIGNED_R11_EAC;
    }
    case KTX_VKFORMAT_EAC_R11G11_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RG11_EAC;
    }
    case KTX_VKFORMAT_EAC_R11G11_SNORM_BLOCK: 
    {
        return GL_COMPRESSED_SIGNED_RG11_EAC;
    }
    case KTX_VKFORMAT_ASTC_4x4_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_4x4_KHR;
    }
    case KTX_VKFORMAT_ASTC_4x4_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;
    }
    case KTX_VKFORMAT_ASTC_4x4_SFLOAT_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_4x4_KHR;
    }
    case KTX_VKFORMAT_ASTC_5x4_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_5x4_KHR;
    }
    case KTX_VKFORMAT_ASTC_5x4_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR;
    }
    case KTX_VKFORMAT_ASTC_5x4_SFLOAT_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_5x4_KHR;
    }
    case KTX_VKFORMAT_ASTC_5x5_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_5x5_KHR;
    }
    case KTX_VKFORMAT_ASTC_5x5_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR;
    }
    case KTX_VKFORMAT_ASTC_5x5_SFLOAT_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_5x5_KHR;
    }
    case KTX_VKFORMAT_ASTC_6x5_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_6x5_KHR;
    }
    case KTX_VKFORMAT_ASTC_6x5_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR;
    }
    case KTX_VKFORMAT_ASTC_6x5_SFLOAT_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_6x5_KHR;
    }
    case KTX_VKFORMAT_ASTC_6x6_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_6x6_KHR;
    }
    case KTX_VKFORMAT_ASTC_6x6_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;
    }
    case KTX_VKFORMAT_ASTC_6x6_SFLOAT_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_6x6_KHR;
    }
    case KTX_VKFORMAT_ASTC_8x5_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_8x5_KHR;
    }
    case KTX_VKFORMAT_ASTC_8x5_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR;
    }
    case KTX_VKFORMAT_ASTC_8x5_SFLOAT_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_8x5_KHR;
    }
    case KTX_VKFORMAT_ASTC_8x6_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_8x6_KHR;
    }
    case KTX_VKFORMAT_ASTC_8x6_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR;
    }
    case KTX_VKFORMAT_ASTC_8x6_SFLOAT_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_8x6_KHR;
    }
    case KTX_VKFORMAT_ASTC_8x8_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_8x8_KHR;
    }
    case KTX_VKFORMAT_ASTC_8x8_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;
    }
    case KTX_VKFORMAT_ASTC_8x8_SFLOAT_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_8x8_KHR;
    }
    case KTX_VKFORMAT_ASTC_10x5_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_10x5_KHR;
    }
    case KTX_VKFORMAT_ASTC_10x5_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR;
    }
    case KTX_VKFORMAT_ASTC_10x5_SFLOAT_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_10x5_KHR;
    }
    case KTX_VKFORMAT_ASTC_10x6_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_10x6_KHR;
    }
    case KTX_VKFORMAT_ASTC_10x6_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR;
    }
    case KTX_VKFORMAT_ASTC_10x6_SFLOAT_BLOCK: 
    {        
        return GL_COMPRESSED_RGBA_ASTC_10x6_KHR;
    }
    case KTX_VKFORMAT_ASTC_10x8_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_10x8_KHR;
    }
    case KTX_VKFORMAT_ASTC_10x8_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR;
    }
    case KTX_VKFORMAT_ASTC_10x8_SFLOAT_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_10x8_KHR;
    }
    case KTX_VKFORMAT_ASTC_10x10_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_10x10_KHR;
    }
    case KTX_VKFORMAT_ASTC_10x10_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;
    }
    case KTX_VKFORMAT_ASTC_10x10_SFLOAT_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_10x10_KHR;
    }
    case KTX_VKFORMAT_ASTC_12x10_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_12x10_KHR;
    }
    case KTX_VKFORMAT_ASTC_12x10_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR;
    }
    case KTX_VKFORMAT_ASTC_12x10_SFLOAT_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_12x10_KHR;
    }
    case KTX_VKFORMAT_ASTC_12x12_UNORM_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_12x12_KHR;
    }
    case KTX_VKFORMAT_ASTC_12x12_SRGB_BLOCK: 
    {
        return GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;
    }
    case KTX_VKFORMAT_ASTC_12x12_SFLOAT_BLOCK: 
    {
        return GL_COMPRESSED_RGBA_ASTC_12x12_KHR;
    }
    case KTX_VKFORMAT_A4R4G4B4_UNORM_PACK16: 
    {
        return GL_RGBA4;
    }
    case KTX_VKFORMAT_A4B4G4R4_UNORM_PACK16: 
    {
        return GL_RGBA4;
    }
    case KTX_VKFORMAT_A1B5G5R5_UNORM_PACK16_KHR: 
    {
        return GL_RGB5_A1;
    }
    case KTX_VKFORMAT_A8_UNORM_KHR: 
    {
        return GL_ALPHA8_EXT;
    }
    }

    ICARIAN_ASSERT(0);

    return GL_INVALID_VALUE;
}

constexpr static GLenum GLFormatFromKtxVkFormat(ktx_uint32_t a_format)
{
    switch (a_format) 
    {
    case KTX_VKFORMAT_R4G4B4A4_UNORM_PACK16:
    {
        return GL_RGBA;
    }
    case KTX_VKFORMAT_B4G4R4A4_UNORM_PACK16: 
    {
        return GL_BGRA;
    }
    case KTX_VKFORMAT_R5G6B5_UNORM_PACK16: 
    {
        return GL_RGB;
    }
    case KTX_VKFORMAT_B5G6R5_UNORM_PACK16: 
    {
        return GL_RGB;
    }
    case KTX_VKFORMAT_R5G5B5A1_UNORM_PACK16: 
    {
        return GL_RGBA;
    }
    case KTX_VKFORMAT_B5G5R5A1_UNORM_PACK16: 
    {
        return GL_BGRA;
    }
    case KTX_VKFORMAT_A1R5G5B5_UNORM_PACK16: 
    {
        return GL_BGRA;
    }
    case KTX_VKFORMAT_R8_UNORM: 
    {
        return GL_RED;
    }
    case KTX_VKFORMAT_R8_SNORM: 
    {
        return GL_RED;
    }
    case KTX_VKFORMAT_R8_UINT: 
    {
        return GL_RED_INTEGER;
    }
    case KTX_VKFORMAT_R8_SINT: 
    {
        return GL_RED_INTEGER;
    }
    case KTX_VKFORMAT_R8_SRGB: 
    {
        return GL_RED;
    }
    case KTX_VKFORMAT_R8G8_UNORM: 
    {
        return GL_RG;
    }
    case KTX_VKFORMAT_R8G8_SNORM: 
    {
        return GL_RG;
    }
    case KTX_VKFORMAT_R8G8_UINT: 
    {
        return GL_RG_INTEGER;
    }
    case KTX_VKFORMAT_R8G8_SINT: 
    {
        return GL_RG_INTEGER;
    }
    case KTX_VKFORMAT_R8G8_SRGB: 
    {
        return GL_RG;
    }
    case KTX_VKFORMAT_R8G8B8_UNORM: 
    {
        return GL_RGB;
    }
    case KTX_VKFORMAT_R8G8B8_SNORM: 
    {
        return GL_RGB;
    }
    case KTX_VKFORMAT_R8G8B8_UINT:
    {
        return GL_RGB_INTEGER;
    } 
    case KTX_VKFORMAT_R8G8B8_SINT: 
    {
        return GL_RGB_INTEGER;
    }
    case KTX_VKFORMAT_R8G8B8_SRGB: 
    {
        return GL_RGB;
    }
    case KTX_VKFORMAT_B8G8R8_UNORM: 
    {
        return GL_BGR;
    }
    case KTX_VKFORMAT_B8G8R8_SNORM: 
    {
        return GL_BGR;
    }
    case KTX_VKFORMAT_B8G8R8_UINT: 
    {
        return GL_BGR_INTEGER;
    }
    case KTX_VKFORMAT_B8G8R8_SINT: 
    {
        return GL_BGR_INTEGER;
    }
    case KTX_VKFORMAT_B8G8R8_SRGB: 
    {
        return GL_BGR;
    }
    case KTX_VKFORMAT_R8G8B8A8_UNORM: 
    {
        return GL_RGBA;
    }
    case KTX_VKFORMAT_R8G8B8A8_SNORM: 
    {
        return GL_RGBA;
    }
    case KTX_VKFORMAT_R8G8B8A8_UINT: 
    {
        return GL_RGBA_INTEGER;
    }
    case KTX_VKFORMAT_R8G8B8A8_SINT: 
    {
        return GL_RGBA_INTEGER;
    }
    case KTX_VKFORMAT_R8G8B8A8_SRGB: 
    {
        return GL_RGBA;
    }
    case KTX_VKFORMAT_B8G8R8A8_UNORM: 
    {
        return GL_BGRA;
    }
    case KTX_VKFORMAT_B8G8R8A8_SNORM: 
    {
        return GL_BGRA;
    }
    case KTX_VKFORMAT_B8G8R8A8_UINT: 
    {
        return GL_BGRA_INTEGER;
    }
    case KTX_VKFORMAT_B8G8R8A8_SINT: 
    {
        return GL_BGRA_INTEGER;
    }
    case KTX_VKFORMAT_B8G8R8A8_SRGB: 
    {
        return GL_BGRA;
    }
    case KTX_VKFORMAT_A8B8G8R8_UNORM_PACK32: 
    {
        return GL_RGBA;
    }
    case KTX_VKFORMAT_A8B8G8R8_SNORM_PACK32: 
    {
        return GL_RGBA;
    }
    case KTX_VKFORMAT_A8B8G8R8_UINT_PACK32: 
    {
        return GL_RGBA_INTEGER;
    }
    case KTX_VKFORMAT_A8B8G8R8_SINT_PACK32: 
    {
        return GL_RGBA_INTEGER;
    }
    case KTX_VKFORMAT_A8B8G8R8_SRGB_PACK32: 
    {
        return GL_RGBA;
    }
    case KTX_VKFORMAT_A2R10G10B10_UNORM_PACK32: 
    {
        return GL_BGRA;
    }
    case KTX_VKFORMAT_A2R10G10B10_UINT_PACK32: 
    {
        return GL_BGRA_INTEGER;
    }
    case KTX_VKFORMAT_A2B10G10R10_UNORM_PACK32: 
    {
        return GL_RGBA;
    }
    case KTX_VKFORMAT_A2B10G10R10_UINT_PACK32: 
    {
        return GL_RGBA_INTEGER;
    }
    case KTX_VKFORMAT_R16_UNORM: 
    {
        return GL_RED;
    }
    case KTX_VKFORMAT_R16_SNORM: 
    {
        return GL_RED;
    }
    case KTX_VKFORMAT_R16_UINT: 
    {
        return GL_RED_INTEGER;
    }
    case KTX_VKFORMAT_R16_SINT: 
    {
        return GL_RED_INTEGER;
    }
    case KTX_VKFORMAT_R16_SFLOAT: 
    {
        return GL_RED;
    }
    case KTX_VKFORMAT_R16G16_UNORM: 
    {
        return GL_RG;
    }
    case KTX_VKFORMAT_R16G16_SNORM: 
    {
        return GL_RG;
    }
    case KTX_VKFORMAT_R16G16_UINT: 
    {
        return GL_RG_INTEGER;
    }
    case KTX_VKFORMAT_R16G16_SINT: 
    {
        return GL_RG_INTEGER;
    }
    case KTX_VKFORMAT_R16G16_SFLOAT: 
    {
        return GL_RG;
    }
    case KTX_VKFORMAT_R16G16B16_UNORM: 
    {
        return GL_RGB;
    }
    case KTX_VKFORMAT_R16G16B16_SNORM: 
    {
        return GL_RGB;
    }
    case KTX_VKFORMAT_R16G16B16_UINT: 
    {
        return GL_RGB_INTEGER;
    }
    case KTX_VKFORMAT_R16G16B16_SINT: 
    {
        return GL_RGB_INTEGER;
    }
    case KTX_VKFORMAT_R16G16B16_SFLOAT: 
    {
        return GL_RGB;
    }
    case KTX_VKFORMAT_R16G16B16A16_UNORM: 
    {
        return GL_RGBA;
    }
    case KTX_VKFORMAT_R16G16B16A16_SNORM: 
    {
        return GL_RGBA;
    }
    case KTX_VKFORMAT_R16G16B16A16_UINT: 
    {
        return GL_RGBA_INTEGER;
    }
    case KTX_VKFORMAT_R16G16B16A16_SINT: 
    {
        return GL_RGBA_INTEGER;
    }
    case KTX_VKFORMAT_R16G16B16A16_SFLOAT: 
    {
        return GL_RGBA;
    }
    case KTX_VKFORMAT_R32_UINT: 
    {
        return GL_RED_INTEGER;
    }
    case KTX_VKFORMAT_R32_SINT: 
    {
        return GL_RED_INTEGER;
    }
    case KTX_VKFORMAT_R32_SFLOAT: 
    {
        return GL_RED;
    }
    case KTX_VKFORMAT_R32G32_UINT: 
    {
        return GL_RG_INTEGER;
    }
    case KTX_VKFORMAT_R32G32_SINT: 
    {
        return GL_RG_INTEGER;
    }
    case KTX_VKFORMAT_R32G32_SFLOAT: 
    {
        return GL_RG;
    }
    case KTX_VKFORMAT_R32G32B32_UINT: 
    {
        return GL_RGB_INTEGER;
    }
    case KTX_VKFORMAT_R32G32B32_SINT: 
    {
        return GL_RGB_INTEGER;
    }
    case KTX_VKFORMAT_R32G32B32_SFLOAT: 
    {
        return GL_RGB;
    }
    case KTX_VKFORMAT_R32G32B32A32_UINT: 
    {
        return GL_RGBA_INTEGER;
    }
    case KTX_VKFORMAT_R32G32B32A32_SINT: 
    {
        return GL_RGBA_INTEGER;
    }
    case KTX_VKFORMAT_R32G32B32A32_SFLOAT: 
    {
        return GL_RGBA;
    }
    case KTX_VKFORMAT_B10G11R11_UFLOAT_PACK32: 
    {
        return GL_RGB;
    }
    case KTX_VKFORMAT_E5B9G9R9_UFLOAT_PACK32: 
    {
        return GL_RGB;
    }
    case KTX_VKFORMAT_D16_UNORM: 
    {
        return GL_DEPTH_COMPONENT;
    }
    case KTX_VKFORMAT_D32_SFLOAT:
    {   
        return GL_DEPTH_COMPONENT;
    } 
    case KTX_VKFORMAT_S8_UINT: 
    {
        return GL_STENCIL_INDEX;
    }
    case KTX_VKFORMAT_D24_UNORM_S8_UINT: 
    {
        return GL_DEPTH_STENCIL;
    }
    case KTX_VKFORMAT_D32_SFLOAT_S8_UINT: 
    {
        return GL_DEPTH_STENCIL;
    }
    case KTX_VKFORMAT_A4R4G4B4_UNORM_PACK16: 
    {
        return GL_BGRA;
    }
    case KTX_VKFORMAT_A4B4G4R4_UNORM_PACK16: 
    {
        return GL_RGBA;
    }
    case KTX_VKFORMAT_A1B5G5R5_UNORM_PACK16_KHR: 
    {
        return GL_RGBA;
    }
    case KTX_VKFORMAT_A8_UNORM_KHR: 
    {
        return GL_ALPHA;
    }
    }

    ICARIAN_ASSERT(0);

    return GL_INVALID_VALUE;
}

constexpr static GLenum GLTypeFromKtxVkFormat(ktx_uint32_t a_format)
{
    switch (a_format) 
    {
    case KTX_VKFORMAT_R4G4B4A4_UNORM_PACK16: 
    {
        return GL_UNSIGNED_SHORT_4_4_4_4;
    }
    case KTX_VKFORMAT_B4G4R4A4_UNORM_PACK16: 
    {
        return GL_UNSIGNED_SHORT_4_4_4_4;
    }
    case KTX_VKFORMAT_R5G6B5_UNORM_PACK16: 
    {
        return GL_UNSIGNED_SHORT_5_6_5;
    }
    case KTX_VKFORMAT_B5G6R5_UNORM_PACK16: 
    {
        return GL_UNSIGNED_SHORT_5_6_5_REV;
    }
    case KTX_VKFORMAT_R5G5B5A1_UNORM_PACK16: 
    {
        return GL_UNSIGNED_SHORT_5_5_5_1;
    }
    case KTX_VKFORMAT_B5G5R5A1_UNORM_PACK16: 
    {
        return GL_UNSIGNED_SHORT_5_5_5_1;
    }
    case KTX_VKFORMAT_A1R5G5B5_UNORM_PACK16: 
    {
        return GL_UNSIGNED_SHORT_1_5_5_5_REV;
    }
    case KTX_VKFORMAT_R8_UNORM: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_R8_SNORM: 
    {
        return GL_BYTE;
    }
    case KTX_VKFORMAT_R8_UINT: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_R8_SINT: 
    {
        return GL_BYTE;
    }
    case KTX_VKFORMAT_R8_SRGB: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_R8G8_UNORM: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_R8G8_SNORM: 
    {
        return GL_BYTE;
    }
    case KTX_VKFORMAT_R8G8_UINT: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_R8G8_SINT: 
    {
        return GL_BYTE;
    }
    case KTX_VKFORMAT_R8G8_SRGB: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_R8G8B8_UNORM: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_R8G8B8_SNORM: 
    {
        return GL_BYTE;
    }
    case KTX_VKFORMAT_R8G8B8_UINT: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_R8G8B8_SINT: 
    {
        return GL_BYTE;
    }
    case KTX_VKFORMAT_R8G8B8_SRGB: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_B8G8R8_UNORM: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_B8G8R8_SNORM: 
    {
        return GL_BYTE;
    }
    case KTX_VKFORMAT_B8G8R8_UINT: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_B8G8R8_SINT: 
    {
        return GL_BYTE;
    }
    case KTX_VKFORMAT_B8G8R8_SRGB: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_R8G8B8A8_UNORM: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_R8G8B8A8_SNORM: 
    {
        return GL_BYTE;
    }
    case KTX_VKFORMAT_R8G8B8A8_UINT: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_R8G8B8A8_SINT: 
    {
        return GL_BYTE;
    }
    case KTX_VKFORMAT_R8G8B8A8_SRGB: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_B8G8R8A8_UNORM: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_B8G8R8A8_SNORM: 
    {
        return GL_BYTE;
    }
    case KTX_VKFORMAT_B8G8R8A8_UINT: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_B8G8R8A8_SINT: 
    {
        return GL_BYTE;
    }
    case KTX_VKFORMAT_B8G8R8A8_SRGB: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_A8B8G8R8_UNORM_PACK32: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_A8B8G8R8_SNORM_PACK32: 
    {
        return GL_BYTE;
    }
    case KTX_VKFORMAT_A8B8G8R8_UINT_PACK32: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_A8B8G8R8_SINT_PACK32: 
    {
        return GL_BYTE;
    }
    case KTX_VKFORMAT_A8B8G8R8_SRGB_PACK32: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_A2R10G10B10_UNORM_PACK32: 
    {
        return GL_UNSIGNED_INT_2_10_10_10_REV;
    }
    case KTX_VKFORMAT_A2R10G10B10_UINT_PACK32: 
    {
        return GL_UNSIGNED_INT_2_10_10_10_REV;
    }
    case KTX_VKFORMAT_A2B10G10R10_UNORM_PACK32: 
    {
        return GL_UNSIGNED_INT_2_10_10_10_REV;
    }
    case KTX_VKFORMAT_A2B10G10R10_UINT_PACK32: 
    {
        return GL_UNSIGNED_INT_2_10_10_10_REV;
    }
    case KTX_VKFORMAT_R16_UNORM: 
    {
        return GL_UNSIGNED_SHORT;
    }
    case KTX_VKFORMAT_R16_SNORM: 
    {
        return GL_SHORT;
    }
    case KTX_VKFORMAT_R16_UINT: 
    {
        return GL_UNSIGNED_SHORT;
    }
    case KTX_VKFORMAT_R16_SINT: 
    {
        return GL_SHORT;
    }
    case KTX_VKFORMAT_R16_SFLOAT: 
    {
        return GL_HALF_FLOAT;
    }
    case KTX_VKFORMAT_R16G16_UNORM: 
    {
        return GL_UNSIGNED_SHORT;
    }
    case KTX_VKFORMAT_R16G16_SNORM: 
    {
        return GL_SHORT;
    }
    case KTX_VKFORMAT_R16G16_UINT: 
    {
        return GL_UNSIGNED_SHORT;
    }
    case KTX_VKFORMAT_R16G16_SINT: 
    {
        return GL_SHORT;
    }
    case KTX_VKFORMAT_R16G16_SFLOAT: 
    {
        return GL_HALF_FLOAT;
    }
    case KTX_VKFORMAT_R16G16B16_UNORM: 
    {
        return GL_UNSIGNED_SHORT;
    }
    case KTX_VKFORMAT_R16G16B16_SNORM: 
    {
        return GL_SHORT;
    }
    case KTX_VKFORMAT_R16G16B16_UINT: 
    {
        return GL_UNSIGNED_SHORT;
    }
    case KTX_VKFORMAT_R16G16B16_SINT: 
    {
        return GL_SHORT;
    }
    case KTX_VKFORMAT_R16G16B16_SFLOAT: 
    {
        return GL_HALF_FLOAT;
    }
    case KTX_VKFORMAT_R16G16B16A16_UNORM: 
    {
        return GL_UNSIGNED_SHORT;
    }
    case KTX_VKFORMAT_R16G16B16A16_SNORM: 
    {
        return GL_SHORT;
    }
    case KTX_VKFORMAT_R16G16B16A16_UINT: 
    {
        return GL_UNSIGNED_SHORT;
    }
    case KTX_VKFORMAT_R16G16B16A16_SINT: 
    {
        return GL_SHORT;
    }
    case KTX_VKFORMAT_R16G16B16A16_SFLOAT: 
    {
        return GL_HALF_FLOAT;
    }
    case KTX_VKFORMAT_R32_UINT: 
    {
        return GL_UNSIGNED_INT;
    }
    case KTX_VKFORMAT_R32_SINT: 
    {
        return GL_INT;
    }
    case KTX_VKFORMAT_R32_SFLOAT: 
    {
        return GL_FLOAT;
    }
    case KTX_VKFORMAT_R32G32_UINT: 
    {
        return GL_UNSIGNED_INT;
    }
    case KTX_VKFORMAT_R32G32_SINT: 
    {
        return GL_INT;
    }
    case KTX_VKFORMAT_R32G32_SFLOAT: 
    {
        return GL_FLOAT;
    }
    case KTX_VKFORMAT_R32G32B32_UINT: 
    {
        return GL_UNSIGNED_INT;
    }
    case KTX_VKFORMAT_R32G32B32_SINT: 
    {
        return GL_INT;
    }
    case KTX_VKFORMAT_R32G32B32_SFLOAT: 
    {
        return GL_FLOAT;
    }
    case KTX_VKFORMAT_R32G32B32A32_UINT: 
    {
        return GL_UNSIGNED_INT;
    }
    case KTX_VKFORMAT_R32G32B32A32_SINT: 
    {
        return GL_INT;
    }
    case KTX_VKFORMAT_R32G32B32A32_SFLOAT: 
    {
        return GL_FLOAT;
    }
    case KTX_VKFORMAT_B10G11R11_UFLOAT_PACK32: 
    {
        return GL_UNSIGNED_INT_10F_11F_11F_REV;
    }
    case KTX_VKFORMAT_E5B9G9R9_UFLOAT_PACK32: 
    {
        return GL_UNSIGNED_INT_5_9_9_9_REV;
    }
    case KTX_VKFORMAT_D16_UNORM: 
    {
        return GL_UNSIGNED_SHORT;
    }
    case KTX_VKFORMAT_D32_SFLOAT: 
    {
        return GL_FLOAT;
    }
    case KTX_VKFORMAT_S8_UINT: 
    {
        return GL_UNSIGNED_BYTE;
    }
    case KTX_VKFORMAT_D24_UNORM_S8_UINT: 
    {
        return GL_UNSIGNED_INT_24_8;
    }
    case KTX_VKFORMAT_D32_SFLOAT_S8_UINT: 
    {
        return GL_FLOAT_32_UNSIGNED_INT_24_8_REV;
    }
    case KTX_VKFORMAT_A4R4G4B4_UNORM_PACK16: 
    {
        return GL_UNSIGNED_SHORT_4_4_4_4_REV;
    }
    case KTX_VKFORMAT_A4B4G4R4_UNORM_PACK16: 
    {
        return GL_UNSIGNED_SHORT_4_4_4_4_REV;
    }
    case KTX_VKFORMAT_A1B5G5R5_UNORM_PACK16_KHR: 
    {
        return GL_UNSIGNED_SHORT_1_5_5_5_REV;
    }
    case KTX_VKFORMAT_A8_UNORM_KHR: 
    {
        return GL_UNSIGNED_BYTE;
    }
    }

    ICARIAN_ASSERT(0);

    return GL_INVALID_VALUE;
}

// MIT License
// 
// Copyright (c) 2024 River Govers
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.